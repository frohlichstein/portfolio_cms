<?php

define('INSTAGRAM_CLIENT_ID', '2347c43e8896443b85bb8af2777f4fbe');
define('INSTAGRAM_CLIENT_SECRET', 'f528239013d04f4a96011899dc3e6b86');

/**
 * HOOKS
 */

/**
 * Implements hook_theme().
 */
function jfro_layout_theme($existing, $type, $theme, $path) {
  return array(
    'home' => array('template' => 'home'),
    'info' => array('template' => 'info'),
    'project_vertical' => array('template' => 'partials/project_vertical'),
    'project_horizontal' => array('template' => 'partials/project_horizontal'),
    'project_share' => array('template' => 'partials/project_share'),
    'project_controls' => array('template' => 'partials/project_controls')
  );
}

/**
 * Implements hook_menu().
 */
function jfro_layout_menu() {
  $items['projects'] = array(
    'title' => 'JFro Home',
    'page callback' => 'jfro_layout_projects_callback',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  $items['info'] = array(
    'title' => 'JFro Info',
    'page callback' => 'jfro_layout_info_callback',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implements hook_preprocess().
 */
function jfro_layout_preprocess_page(&$variables) {
  $variables['main_menu'] = render(menu_tree_output(menu_tree_all_data('main-menu')));
  $variables['cat_menu'] = project_tags_nav();
}

/**
 * Implements hook_preprocess().
 */
function jfro_layout_preprocess_node(&$variables) {
  $node = $variables['node'];
  if($node->type == 'project'){
    $controls = jfro_return_project_controls($node->nid);
    $node->next = $controls['next'];
    $node->prev = $controls['prev'];
    $variables['project'] = new Model($node);
  }
}


/**
 * CALLBACKS
 */

/**
 * Page callback: home
 */
function jfro_layout_projects_callback($filter){
  $tid = get_tid_from_term_name($filter);
  $projects = jfro_layout_get_projects($tid);
  $variables = array(
    'projects' => $projects
  );
  return theme('home', $variables);
}

/**
 * Page callback: info
 */
function jfro_layout_info_callback(){
  $variables = array(
    'instagram_photos' => instagram_recent()
  );
  return theme('info', $variables);
}


/**
 * UTILITY
 */

/**
 * Return an array of projects
 * @return array
 */
function jfro_layout_get_projects($tid){
  $args = $tid ? $tid : NULL;
  $results = views_get_view_result('projects', 'page', $args);
  $projects = array();
  foreach($results as $result){
    $node = node_load($result->nid);
    $projects[] = new Model($node);
  }

  return $projects;
}

/**
 * Returns an assoc array of the next and previous node paths
 * @param $node - node object
 * @return array - with 'prev' and 'next' keys
 */
function jfro_return_project_controls($nid){
  $controls = array();
  $results = array();
  foreach(views_get_view_result('projects', 'page') as $project){
    $results[] = $project->nid;
  }
  $current = array_search($nid, $results);
  $next = isset($results[$current + 1]) ? $results[$current + 1] : FALSE;
  $prev = isset($results[$current - 1]) ? $results[$current - 1] : FALSE;
  if($next) $next = '/' . drupal_get_path_alias('node/' . $next);
  if($prev) $prev = '/' . drupal_get_path_alias('node/' . $prev);
  $controls['next'] = $next;
  $controls['prev'] = $prev;
  return $controls;
}

/**
 * Returns an array of Instagram photo URLs.
 * @return array
 */
function instagram_recent(){
  $instagram_photos = array();
  $response = drupal_http_request("https://api.instagram.com/v1/users/17426721/media/recent/?count=5&client_id=" . INSTAGRAM_CLIENT_ID);
  $json = json_decode($response->data);
  foreach($json->data as $photo){
    $instagram_photos[] = $photo->images->standard_resolution->url;
  }
  return $instagram_photos;
}

/**
 * Returns the tid of a given term name. Returns NULL if term is not found.
 */
function get_tid_from_term_name($term_name){
  $term_array = taxonomy_get_term_by_name($term_name);
  if(!empty($term_array)){
    $term = array_shift($term_array);
    return $term->tid;
  }
  return NULL;
}

function project_tags_nav(){
  $url_term = arg(1);
  $tree = taxonomy_get_tree(1);
  $output = '<ul class="cat-nav">';
  $output .= '<li><a href="">View all</a></li>';
  foreach ($tree as $term) {
    if($url_term == strtolower($term->name)){
      $output .= '<li class="active"><a href="/projects/' . strtolower($term->name) . '">' . $term->name . '</a></li>';
    }else{
      $output .= '<li><a href="/projects/' . strtolower($term->name) . '">' . $term->name . '</a></li>';
    }
  }
  $output .= '</ul>';
  return $output;
}

?>